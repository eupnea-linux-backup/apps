name: Build AppImage

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches: [ "main" ]
  schedule:
    - cron: "10 0 * * *" # run at the start of every day after functions.py updates
  workflow_dispatch:

jobs:
  build-setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Installing dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y python3-pip python3-setuptools curl rsync fuse libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev zlib1g-dev libsdl2-image-2.0-0 libsdl2-2.0-0

      - name: Downloading misc dependencies
        run: |
          curl -L https://github.com/niess/python-appimage/releases/download/python3.10/python3.10.13-cp310-cp310-manylinux2014_x86_64.AppImage -o /tmp/python.AppImage
          curl -L https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -o /tmp/appimagetool.AppImage

      - name: Building setup AppImage
        run: bash .github/scripts/build-setup.sh

      - name: Uploading appimage as artifact
        uses: actions/upload-artifact@v3
        with:
          name: eupnea-setup
          retention-days: 1
          path: /tmp/eupnea-setup.AppImage

  build-settings:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Installing dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y python3-pip python3-setuptools curl rsync fuse libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev zlib1g-dev libsdl2-image-2.0-0 libsdl2-2.0-0

      - name: Downloading misc dependencies
        run: |
          curl -L https://github.com/niess/python-appimage/releases/download/python3.10/python3.10.13-cp310-cp310-manylinux2014_x86_64.AppImage -o /tmp/python.AppImage
          curl -L https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -o /tmp/appimagetool.AppImage

      - name: Building settings AppImage
        run: bash .github/scripts/build-settings.sh

      - name: Uploading appimage as artifact
        uses: actions/upload-artifact@v3
        with:
          name: eupnea-settings
          retention-days: 1
          path: /tmp/eupnea-settings.AppImage


  create-release:
    runs-on: ubuntu-latest
    needs: [ build-setup, build-settings ]
    steps:
      - name: Checking out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: creating tmp folder
        run: mkdir /tmp/artifacts

      - name: Downloading kernel artifacts
        uses: actions/download-artifact@v3
        with:
          path: /tmp/artifacts/

      - name: Generating release tag
        id: tag
        run: |
          date=$(date +"%Y.%m.%d_%H-%M")
          echo "release_tag=$date" >> $GITHUB_OUTPUT

      - name: Creating new release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          name: Automated AppImage build - ${{ steps.tag.outputs.release_tag }}
          body: |
            Prebuild eupnea apps AppImages, intended for use with Eupnea systems.
            [DO NOT RUN WITHOUT READING THE DISCLAIMER](https://github.com/eupnea-linux/eupnea-apps#disclaimer)
          files: |
            /tmp/artifacts/eupnea-settings/eupnea-settings.AppImage
            /tmp/artifacts/eupnea-setup/eupnea-setup.AppImage
